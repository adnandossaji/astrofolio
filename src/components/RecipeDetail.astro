---
import type { CollectionEntry } from 'astro:content';

interface Props {
    recipe: CollectionEntry<'recipes'>;
}

const { recipe } = Astro.props;
const { title, description, image, prepTime, cookTime, servings, difficulty, tags, ingredients, instructions, notes, author, datePublished } = recipe.data;
---

<article class="recipe-detail">
    <div class="hero">
        <img src={image} alt={title} />
        <div class="overlay">
            <div class="container">
                <h1>{title}</h1>
                <p class="description">{description}</p>
                <div class="meta">
                    <div class="meta-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline></svg>
                        <span>Prep: {prepTime}</span>
                    </div>
                    <div class="meta-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"></path></svg>
                        <span>Cook: {cookTime}</span>
                    </div>
                    <div class="meta-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path></svg>
                        <span>Servings: {servings}</span>
                    </div>
                    <div class="meta-item">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path></svg>
                        <span>Difficulty: {difficulty}</span>
                    </div>
                </div>
                <div class="tags">
                    {tags.map(tag => (
                        <a href={`/tags/${tag}`} class="tag">{tag}</a>
                    ))}
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="recipe-content">
            <div class="ingredients-section">
                <h2>Ingredients</h2>
                <ul class="ingredients-list">
                    {ingredients.map(ingredient => (
                        <li>
                            <span class="amount">{ingredient.amount} {ingredient.unit || ''}</span>
                            <span class="name">{ingredient.name}</span>
                        </li>
                    ))}
                </ul>
            </div>

            <div class="instructions-section">
                <h2>Instructions</h2>
                <ol class="instructions-list">
                    {instructions.map(instruction => (
                        <li>
                            <div class="instruction-step">
                                <span class="step-number">{instruction.step}</span>
                                <p>{instruction.instruction}</p>
                            </div>
                        </li>
                    ))}
                </ol>
            </div>
        </div>

        {notes && (
            <div class="notes-section">
                <h3>Chef's Notes</h3>
                <p>{notes}</p>
            </div>
        )}

        <div class="author-section">
            <p>
                Created by {author || 'Astrofolio'} 
                {datePublished && (
                    <span> on {new Date(datePublished).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    })}</span>
                )}
            </p>
        </div>
    </div>
</article>

<style>
    .recipe-detail {
        margin-bottom: 3rem;
    }

    .hero {
        position: relative;
        height: 50vh;
        min-height: 400px;
        margin-bottom: 2rem;
    }

    .hero img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
        padding: 3rem 0 1.5rem;
        color: white;
    }

    h1 {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        color: white;
    }

    .description {
        font-size: 1.2rem;
        margin-bottom: 1.5rem;
        max-width: 800px;
    }

    .meta {
        display: flex;
        flex-wrap: wrap;
        gap: 1.5rem;
        margin-bottom: 1rem;
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-top: 1rem;
    }

    .tag {
        background-color: var(--color-accent);
        color: #333;
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.8rem;
        text-decoration: none;
        font-weight: 500;
        transition: background-color 0.3s;
    }

    .tag:hover {
        background-color: #f8da3d;
    }

    .recipe-content {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 2rem;
        margin-bottom: 2rem;
    }

    .ingredients-section,
    .instructions-section {
        background-color: white;
        border-radius: 12px;
        padding: 1.5rem;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    h2 {
        margin-bottom: 1.5rem;
        padding-bottom: 0.8rem;
        border-bottom: 2px solid var(--color-primary);
        display: inline-block;
    }

    h3 {
        margin-bottom: 1rem;
        color: var(--color-primary);
    }

    .ingredients-list {
        list-style: none;
        padding: 0;
    }

    .ingredients-list li {
        display: flex;
        padding: 0.5rem 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .ingredients-list li:last-child {
        border-bottom: none;
    }

    .amount {
        font-weight: 500;
        min-width: 80px;
    }

    .instructions-list {
        padding-left: 0;
        counter-reset: instruction;
    }

    .instructions-list li {
        margin-bottom: 1.5rem;
    }

    .instruction-step {
        position: relative;
        padding-left: 50px;
    }

    .step-number {
        position: absolute;
        left: 0;
        top: 0;
        width: 35px;
        height: 35px;
        background-color: var(--color-primary);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
    }

    .instruction-step p {
        margin: 0;
        line-height: 1.7;
    }

    .notes-section {
        background-color: #fff8e1;
        border-left: 4px solid var(--color-accent);
        padding: 1.5rem;
        margin-bottom: 2rem;
        border-radius: 0 12px 12px 0;
    }

    .author-section {
        font-style: italic;
        color: #666;
        text-align: right;
    }

    @media (max-width: 768px) {
        .recipe-content {
            grid-template-columns: 1fr;
        }

        .meta {
            gap: 1rem;
        }

        .hero {
            height: 40vh;
        }

        h1 {
            font-size: 2rem;
        }
    }
</style> 